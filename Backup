import numpy as np
import cv2


def calibrate_camera():
    img = cv2.imread('CameraCalibration/calibration1.jpg')
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

    ret, corners = cv2.findChessboardCorners(gray, (9, 5), None)

    if ret:
        # Draw and display the corners
        #print('chess')
        #img = cv2.drawChessboardCorners(img, (9, 5), corners, ret)
        src = np.float32([corners[0], corners[9 - 1], corners[-1], corners[-9]])
        dst = np.float32([[[80, 60]], [[80, 1190]], [[620, 60]], [[620, 1190]]])
        ret, mtx, dist, rvecs, tvecs = cv2.calibrateCamera(dst, src, gray.shape[::-1], None, None)
        return mtx, dist

    return None


image = cv2.imread("CameraCalibration/calibration1.jpg")
mtx, dist = calibrate_camera()
undist = cv2.undistort(image, mtx, dist, None, mtx)
cv2.imwrite("test.jpg", undist)